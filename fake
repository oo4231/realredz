local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")

local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Name = "CoolUI"
gui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main frame with width 250
local main = Instance.new("Frame")
main.Size = UDim2.new(0, 400, 0, 200) -- Width: 250, Height: 200
main.Position = UDim2.new(0.5, -125, 0.5, -100) -- Centered (half of width and height)
main.BackgroundColor3 = Color3.fromRGB(40, 40, 45) -- Dark background
main.BorderSizePixel = 0
main.Parent = gui

Instance.new("UICorner", main).CornerRadius = UDim.new(0, 10)

local bg = Instance.new("UIGradient")
bg.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 100, 0)), -- Vibrant orange gradient
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 50, 0))
})
bg.Parent = main

local shadow = Instance.new("ImageLabel")
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.Position = UDim2.new(0, -15, 0, -15)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://297774371"
shadow.ImageColor3 = Color3.fromRGB(15, 15, 20)
shadow.ImageTransparency = 0.6
shadow.Parent = main

local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 0, 30)
label.Position = UDim2.new(0, 0, 0, 0)
label.BackgroundTransparency = 1
label.Text = "Pyro Hubv2"
label.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
label.TextSize = 16
label.Font = Enum.Font.GothamBold
label.Parent = main

-- Create a container for the tabs
local tabContainer = Instance.new("Frame")
tabContainer.Size = UDim2.new(1, 0, 0, 30)
tabContainer.Position = UDim2.new(0, 0, 0, 30)
tabContainer.BackgroundTransparency = 1
tabContainer.Parent = main

-- Create the Menu tab button
local menuTab = Instance.new("TextButton")
menuTab.Size = UDim2.new(0.5, 0, 1, 0)
menuTab.Position = UDim2.new(0, 0, 0, 0)
menuTab.BackgroundColor3 = Color3.fromRGB(255, 100, 0) -- Orange
menuTab.BorderSizePixel = 0
menuTab.Text = "Menu"
menuTab.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
menuTab.TextSize = 14
menuTab.Font = Enum.Font.GothamBold
menuTab.Parent = tabContainer

Instance.new("UICorner", menuTab).CornerRadius = UDim.new(0, 6)

-- Create the Settings tab button
local settingsTab = Instance.new("TextButton")
settingsTab.Size = UDim2.new(0.5, 0, 1, 0)
settingsTab.Position = UDim2.new(0.5, 0, 0, 0)
settingsTab.BackgroundColor3 = Color3.fromRGB(255, 50, 50) -- Red
settingsTab.BorderSizePixel = 0
settingsTab.Text = "Settings"
settingsTab.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
settingsTab.TextSize = 14
settingsTab.Font = Enum.Font.GothamBold
settingsTab.Parent = tabContainer

Instance.new("UICorner", settingsTab).CornerRadius = UDim.new(0, 6)

-- Create a container for the Menu content
local menuContent = Instance.new("Frame")
menuContent.Size = UDim2.new(1, 0, 1, -60)
menuContent.Position = UDim2.new(0, 0, 0, 60)
menuContent.BackgroundTransparency = 1
menuContent.Visible = true -- Default visible
menuContent.Parent = main

-- Create a container for the Settings content
local settingsContent = Instance.new("Frame")
settingsContent.Size = UDim2.new(1, 0, 1, -60)
settingsContent.Position = UDim2.new(0, 0, 0, 60)
settingsContent.BackgroundTransparency = 1
settingsContent.Visible = false -- Hidden by default
settingsContent.Parent = main

-- Function to switch between tabs
local function switchTab(selectedTab)
    menuContent.Visible = selectedTab == "Menu"
    settingsContent.Visible = selectedTab == "Settings"
end

-- Connect tab buttons to switchTab function
menuTab.MouseButton1Click:Connect(function()
    switchTab("Menu")
end)

settingsTab.MouseButton1Click:Connect(function()
    switchTab("Settings")
end)

-- Function to create toggles
local function makeToggle(text, yPos, color, parent)
    local base = Instance.new("Frame")
    base.Size = UDim2.new(0.9, 0, 0, 30) -- Width is 90% of parent
    base.Position = UDim2.new(0.5, 0, 0, yPos)
    base.BackgroundColor3 = color -- Vibrant color for the toggle base
    base.BorderSizePixel = 0
    base.AnchorPoint = Vector2.new(0.5, 0)
    base.Parent = parent

    Instance.new("UICorner", base).CornerRadius = UDim.new(0, 6)

    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 40, 0, 20) -- Fixed size for the toggle button
    btn.Position = UDim2.new(1, -45, 0.5, -10)
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 65) -- Dark gray for the button
    btn.BorderSizePixel = 0
    btn.Text = ""
    btn.Parent = base

    Instance.new("UICorner", btn).CornerRadius = UDim.new(1, 0)

    local dot = Instance.new("Frame")
    dot.Size = UDim2.new(0, 16, 0, 16) -- Fixed size for the dot
    dot.Position = UDim2.new(0, 2, 0.5, -8)
    dot.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White dot
    dot.BorderSizePixel = 0
    dot.Parent = btn

    Instance.new("UICorner", dot).CornerRadius = UDim.new(1, 0)

    local txt = Instance.new("TextLabel")
    txt.Size = UDim2.new(1, -55, 1, 0)
    txt.Position = UDim2.new(0, 10, 0, 0)
    txt.BackgroundTransparency = 1
    txt.Text = text
    txt.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
    txt.TextSize = 14
    txt.Font = Enum.Font.Gotham
    txt.TextXAlignment = Enum.TextXAlignment.Left
    txt.Parent = base

    local on = false
    btn.MouseButton1Click:Connect(function()
        on = not on
        local goals = {
            [btn] = {BackgroundColor3 = on and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(60, 60, 65)}, -- Green when on
            [dot] = {Position = on and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)}
        }
        for obj, goal in pairs(goals) do
            TS:Create(obj, TweenInfo.new(0.2), goal):Play()
        end
    end)
end

-- Add toggles to the Menu tab
makeToggle("Freeze Trade", 10, Color3.fromRGB(255, 100, 0), menuContent) -- Orange
makeToggle("Auto Accept", 50, Color3.fromRGB(255, 200, 0), menuContent) -- Yellow
makeToggle("Auto Add Items", 90, Color3.fromRGB(255, 50, 50), menuContent) -- Red

-- Add content to the Settings tab (example: a label)
local settingsLabel = Instance.new("TextLabel")
settingsLabel.Size = UDim2.new(1, 0, 0, 30)
settingsLabel.Position = UDim2.new(0, 0, 0, 10)
settingsLabel.BackgroundTransparency = 1
settingsLabel.Text = "Settings Content"
settingsLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
settingsLabel.TextSize = 14
settingsLabel.Font = Enum.Font.Gotham
settingsLabel.TextXAlignment = Enum.TextXAlignment.Left
settingsLabel.Parent = settingsContent

local drag = {
    enabled = false,
    start = nil,
    startPos = nil
}

main.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        drag.enabled = true
        drag.start = input.Position
        drag.startPos = main.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                drag.enabled = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if drag.enabled and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - drag.start
        main.Position = UDim2.new(
            drag.startPos.X.Scale,
            drag.startPos.X.Offset + delta.X,
            drag.startPos.Y.Scale,
            drag.startPos.Y.Offset + delta.Y
        )
    end
end)
